name: CKAN instance
on: [push]
jobs:
  test:
    strategy:
      matrix:
        ckan-version: [2.9, 2.8, 2.7]
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    services:
      ckan:
        image: openknowledge/ckan-dev:${{ matrix.ckan-version }}
        env:
          CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
          CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
          CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
          CKAN_SOLR_URL: http://solr:8983/solr/ckan
          CKAN_REDIS_URL: redis://redis:6379/1
          CKAN_DATAPUSHER_URL: http://datapusher:8800
          CKAN__DATAPUSHER__CALLBACK_URL_BASE: http://ckan:5000
          TZ: UTC
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:3

    steps:
    - uses: actions/checkout@v3
    - run: sleep 10
    - name: LOG BEFORE CKAN CHECK...
      run: docker logs "${{ job.services.ckan.id }}"
    - name: Check if CKAN is up
      run: |
        curl --retry 5 --retry-delay 1  http://localhost:5000/api/3/action/status_show
    - name: LOG AFTER CKAN CHECK...
      run: docker logs "${{ job.services.ckan.id }}"